module interval where

import primitive

funExt' : (A : U) (B : A -> U) (f g : (x : A) -> B x) ->
          ((x : A) -> Id (B x) (f x) (g x)) -> Id ((x : A) -> B x) f g
funExt' A B f g ptw = mapOnPath Int ((x : A) -> B x) htpy startInt endInt segInt
  where
    htpy : Int -> (x : A) -> B x
    htpy i x = intrec (\_ -> B x) (f x) (g x) (ptw x) i
